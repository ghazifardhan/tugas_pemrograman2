/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import database.Database;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.Account;

/**
 *
 * @author cube
 */
public class Overview extends javax.swing.JInternalFrame {

    /**
     * Creates new form Overview
     */
    DefaultTableModel model = new DefaultTableModel();
    ArrayList<Integer> in = new ArrayList<Integer>(); 
    ArrayList<Integer> out = new ArrayList<Integer>(); 
    Integer totalIn = 0, totalOut = 0, totalMoney = 0;
    
    DecimalFormat IndonesiaCurrency = (DecimalFormat) DecimalFormat.getCurrencyInstance();
    DecimalFormatSymbols RupiahFormat = new DecimalFormatSymbols();
    String tipe_data1, tipe_data2, from_date, to_date;
    private TableRowSorter<TableModel> rowSorter;
    public Overview(String tipe1, String tipe2, String fromDate, String toDate) {
        initComponents();
        
        model = (DefaultTableModel) table.getModel();
        this.rowSorter = new TableRowSorter<>(table.getModel());
        
        RupiahFormat.setCurrencySymbol("Rp ");
        RupiahFormat.setMonetaryDecimalSeparator(',');
        RupiahFormat.setGroupingSeparator('.');

        IndonesiaCurrency.setDecimalFormatSymbols(RupiahFormat);
        
        tipe_data1 = tipe1;
        tipe_data2 = tipe2;
        from_date = fromDate;
        to_date = toDate;
        
        table.setRowSorter(rowSorter);
        generateSearch(tipe_data1, tipe_data2, from_date, to_date, "");
        arraySum();
        generateFilter();
    }

    private void generateData(){
        model.setRowCount(0);
        ResultSet rs = Database.generateInOut();
        try{
            while(rs.next()){
               Object[] data = { rs.getString("account"), rs.getString("type"), rs.getString("category"), IndonesiaCurrency.format(rs.getInt("amount")), rs.getString("transaction_date"), rs.getString("description")};
               model.addRow(data);
               if(rs.getString("type").equals("Income")){
                   in.add(rs.getInt("amount"));
               } else {
                   out.add(rs.getInt("amount"));
               }                   
            }
        } catch(SQLException ex){
            ex.getMessage();
        }
    }
    
    private void generateSearch(String text1, String text2, String text3, String text4, String text5){
        model.setRowCount(0);
        String query;
        if(text1.equals("") && text2.equals("expense")){
            query = "c.name = '"+text2+"' and a.transaction_date BETWEEN '"+text3+"' and '"+text4+"'";
        } else if(text1.equals("income") && text2.equals("")){
            query = "c.name = '"+text1+"' and a.transaction_date BETWEEN '"+text3+"' and '"+text4+"'";
        } else {
            query = "c.name = '"+text1+"' or c.name = '"+text2+"' and a.transaction_date BETWEEN '"+text3+"' and '"+text4+"'";
        }
        
        System.out.println(text1);
        System.out.println(text2);
        System.out.println(query);
        ResultSet rs = Database.generateInOutSearch(query);
        try{
            while(rs.next()){
               Object[] data = { rs.getString("account"), rs.getString("type"), rs.getString("category"), IndonesiaCurrency.format(rs.getInt("amount")), rs.getString("transaction_date"), rs.getString("description")};
               model.addRow(data);
               if(rs.getString("type").equals("Income")){
                   in.add(rs.getInt("amount"));
               } else {
                   out.add(rs.getInt("amount"));
               }                   
            }
        } catch(SQLException ex){
            ex.getMessage();
        }
    }
    
    private void arraySum(){
        for(int i=0;i<in.size();i++){
            totalIn += in.get(i);
        }
        for(int i=0;i<out.size();i++){
            totalOut += out.get(i);
        }
        
        totalMoney = totalIn - totalOut;
        
        
        // Display to corresponding textfield
        labelIncome.setText(IndonesiaCurrency.format(totalIn));
        labelOutcome.setText(IndonesiaCurrency.format(totalOut));
        labelCurrMoney.setText(IndonesiaCurrency.format(totalMoney));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        labelIncome = new javax.swing.JLabel();
        labelOutcome = new javax.swing.JLabel();
        labelCurrMoney = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbFilter = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("OVERVIEW");

        jLabel2.setText("INCOME");

        jLabel3.setText("OUTCOME");

        jLabel4.setText("CURRENT MONEY");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account", "Type", "Category", "Amont", "Date", "Description"
            }
        ));
        jScrollPane1.setViewportView(table);

        labelIncome.setFont(new java.awt.Font("Open Sans", 1, 12)); // NOI18N
        labelIncome.setText("Rp -");

        labelOutcome.setFont(new java.awt.Font("Open Sans", 1, 12)); // NOI18N
        labelOutcome.setText("Rp -");

        labelCurrMoney.setFont(new java.awt.Font("Open Sans", 1, 12)); // NOI18N
        labelCurrMoney.setText("Rp -");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Filter Berdasarkan Akun");

        cbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Pilih--" }));
        cbFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(471, 471, 471)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 986, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelCurrMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labelIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelIncome)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelOutcome)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labelCurrMoney))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String text = tfSearch.getText();
        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFilterActionPerformed
        // TODO add your handling code here:
        String search;
        if(cbFilter.getSelectedIndex() == 0){
            search = "";
        } else {
            search = cbFilter.getSelectedItem().toString();
        }
        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + search));
    }//GEN-LAST:event_cbFilterActionPerformed

    private void generateFilter(){
        ResultSet rs = Database.selectData("asset");
        try{
            while(rs.next()){
               cbFilter.addItem(rs.getString("name"));
            }
        } catch(SQLException ex){
            ex.getMessage();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbFilter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCurrMoney;
    private javax.swing.JLabel labelIncome;
    private javax.swing.JLabel labelOutcome;
    private javax.swing.JTable table;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
